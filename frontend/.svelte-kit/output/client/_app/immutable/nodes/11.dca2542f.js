import{s as P,f as T,g as F,h as H,d as L,j as G,i as N,v as p,w as g,x as W,o as $,z as B,p as I}from"../chunks/scheduler.7c1da786.js";import{l as U,g as f,P as v,G as w,a as K}from"../chunks/gameRender.d8bcad45.js";import{S as q,i as J}from"../chunks/index.7a22757c.js";import{w as j,v as C,x as D,n as M,h as R,m as V,u as Q,k as X,s as Y,z}from"../chunks/store.7f25bae6.js";import{c as Z}from"../chunks/ModalValues.a888a47e.js";const{window:y}=K;function ee(o){let s,r,a;return{c(){s=T("canvas"),this.h()},l(t){s=F(t,"CANVAS",{id:!0,class:!0}),H(s).forEach(L),this.h()},h(){G(s,"id","rendering-canvas"),G(s,"class","svelte-1e7so1n")},m(t,c){N(t,s,c),o[4](s),r||(a=[p(y,"resize",o[3]),p(y,"keydown",o[1]),p(y,"keyup",o[2])],r=!0)},p:g,i:g,o:g,d(t){t&&L(s),o[4](null),r=!1,W(a)}}}async function te(){const o=localStorage.getItem("jwt");(await fetch("http://localhost:3000/user/enterGame",{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"}})).ok&&console.log("-[ Enter Game Button ]- ")}async function A(){const o=localStorage.getItem("jwt");(await fetch("http://localhost:3000/user/leaveGame",{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"}})).ok&&console.log("-[ Leave Game ]- ")}async function ne(o){const s=localStorage.getItem("jwt");(await fetch("http://localhost:3000/user/matchHistory",{method:"POST",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"},body:JSON.stringify({data:o})})).ok&&console.log("-[ Match History ]-  Set !")}function se(o,s,r){let a,t,c,i,b,u,S,_,l,k="john";$(()=>{j.set(3),C.set(3),l=new U.Client("ws://localhost:3000"),D.set(l),M.set(!1),R.set(!0),te(),D.subscribe(e=>{l=e}),V.subscribe(e=>{k=e}),Q.subscribe(e=>{S=e}),X.subscribe(e=>{_=e}),C.subscribe(e=>{b=e}),j.subscribe(e=>{u=e}),Y.subscribe(e=>{});const n=c.getContext("2d");if(!n)throw new Error("Failed to get 2D context.");return i=n,(async()=>(await x(),f(i,a),d(),E()))(),t==null||t.onLeave(e=>{}),window.addEventListener("resize",d),window.addEventListener("keydown",h),window.addEventListener("keyup",m),()=>{window.removeEventListener("resize",d),window.removeEventListener("keydown",h),window.removeEventListener("keyup",m)}}),B(()=>{t.send("player_disconnected",{messageDuFront:"Salut du Frontend onDestroy SveltKit !"}),t.leave(),z.set(!1),A(),Z(),M.set(!0),console.log("Le composant [Game/Create] a été démonté.")});async function x(){try{const n={speed:b,scoreToWin:u,loginName:S,id:_,username:k};z.set(!0),t=await l.joinOrCreate("pong",n),a=t.state,t.onMessage("state",e=>{console.log("New game state received:",e)}),t.onMessage("startGame",e=>{}),t.onStateChange(e=>{a=e,f(i,a)}),t.onMessage("updateWinningScore",e=>{u=e.winningScore}),t.onMessage("scoreHistory",e=>{ne(e)}),t.onMessage("gameFinished",e=>{e.winnerLogin&&alert("Winner is '"+e.winnerLogin+"'"),A()})}catch(n){console.error("Failed to connect to the game server:",n)}}function h(n){switch(n.key){case"ArrowUp":t.send("paddleMove",{newDirection:v.UP});break;case"ArrowDown":t.send("paddleMove",{newDirection:v.DOWN});break}}function m(n){switch(n.key){case"ArrowUp":case"ArrowDown":t.send("paddleMove",{newDirection:v.STOP});break}}function d(){const n=Math.min(window.innerWidth/w.width,window.innerHeight/w.height);i.canvas.width=w.width*n,i.canvas.height=w.height*n,i.scale(n,n)}function E(){requestAnimationFrame(E),f(i,a)}function O(n){I[n?"unshift":"push"](()=>{c=n,r(0,c)})}return[c,h,m,d,O]}class le extends q{constructor(s){super(),J(this,s,se,ee,P,{})}}export{le as component};
