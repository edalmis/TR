version: "3.8"

networks:
  net:
    driver: bridge

services:
  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "5173:5173"
    networks:
      - net
    env_file:
      - .env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/static:/app/static
      - node_modules_frontend:/app/node_modules
    depends_on:
      - backend
  backend:
    container_name: backend
    build: ./backend
    volumes:
      - ./backend:/usr/src/app
      - node_modules_backend:/usr/src/app/node_modules
    ports:
      - 3000:3000
      - 3001:3001
      - 3002:3002
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      UID: ${UID}
      SECRET: ${SECRET}
      JWTSECRET: ${JWTSECRET}
    networks:
      - net 
    depends_on:
      - db
  db:
    container_name: "db"
    image: postgres:14.5
    restart: always
    volumes:
      - volume_db:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - net
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
volumes:
  volume_db:
  node_modules_frontend:
  node_modules_backend:



  # version: "3.8"

  # services:
  # backend:
  #   build: 
  #     dockerfile: Dockerfile
  #     context: ./backend
  #     target: development
  #   volumes:
  #       - ./backend:/backend/src/app
  #       - /backend/src/app/node_modules/
  #   # command: npm run start:dev
  #   depends_on: 
  #       - db
  #   environment:
  #       #DATABASE_URL: postgres://user:password@postgres:5432/db
  #       # NODE_ENV: development
  #       #JWT_SECRET: hard_to_guess_secret_123
  #       PORT: 3000, 3001
  #   ports:
  #       - 3000:3000
  #       - 3001:3001
  ### [ postgres ]:
  # db:
  #   container_name: "db"
  #   image: postgres:14.5
  #   restart: always
  #   env_file:
  #     - .env
  #   environment:
  #     # POSTGRES_USER: myusername
  #     # POSTGRES_PASSWORD: mypassword
  #     # POSTGRES_DB: mydatabase
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - "5432:5432"
  # ### [ postgres Adminer - pgadmin ]:
  # postgres_admin:
  #   image:
  #   depends_on:
  #     - db
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.de
  #     PGADMIN_DEFAULT_PASSWORD: password
  #   ports: -"5050:80"
  # postgres:
  #   #container_name: "db"
  #   container_name: "db"
  #   image: postgres:14.5
  #   environment:
  #     - POSTGRES_USER=hector
  #     - POSTGRES_PASSWORD=mypassword
  #     - POSTGRES_DB=db
  #     - DATABASE_URL=postgres://hector:mypassword@postgres:5432/db
  #   # env_file:
  #   #   - .env
  #   ports:
  #     - "5432:5432"
  # # back:
  # #   build:
  # #     dockerfile: Dockerfile
  # #     context: ./back
  # #   depends_on:
  # #     - postgres
  # #   env_file:
  # #     - .env
  # #   ports:
  # #     - "3000:3000"
  # version: "3.8"

  # services:
  #   backend:
  #     build: 
  #       dockerfile: back.Dockerfile
  #       context: ./backend
  #       target: development
  #     volumes:
  #         - ./api:/api/src/app
  #         - /api/src/app/node_modules/
  #     command: npm run start:dev
  #     depends_on: 
  #         - postgres
  #     environment:
  #         DATABASE_URL: postgres://user:password@postgres:5432/db
  #         NODE_ENV: development
  #         JWT_SECRET: hard_to_guess_secret_123
  #         PORT: 3000
  #     ports:
  #         - 3000:3000

  #   postgres:
  #     image: postgres:10.4
  #     environment:
  #       POSTGRES_USER: user
  #       POSTGRES_PASSWORD: password
  #       POSTGRES_DB: db
  #     ports:
  #       - 35000:5432

  #   postgres_admin:
  #     image: dpage/pgadmin4:4.28
  #     depends_on: 
  #       - postgres
  #     environment:
  #       PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #       PGADMIN_DEFAULT_PASSWORD: password
  #     ports:
  #       - 5050:80
